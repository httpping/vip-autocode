package ${package.ServiceImpl};

import ${package.Entity}.${entity};
import ${package.Mapper}.${table.mapperName};
import ${package.Service}.${table.serviceName};
import ${superServiceImplClassPackage};
import org.springframework.stereotype.Service;
import com.baomidou.mybatisplus.plugins.Page;
import java.util.List;
import com.baomidou.mybatisplus.mapper.Condition;
import com.baomidou.mybatisplus.mapper.EntityWrapper;

/**
 * <p>
 * $!{table.comment} 服务实现类
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Service
#if(${kotlin})
open class ${table.serviceImplName} : ${superServiceImplClass}<${table.mapperName}, ${entity}>(), ${table.serviceName} {

}
#else
public class ${table.serviceImplName} extends ${superServiceImplClass} <${table.mapperName}, ${entity}> implements ${table.serviceName} {
        /**
        * 添加方法
        * @return
        */
        @Override
        public ${entity}  add(${entity} model){
            boolean back=this.insertOrUpdate(model);
            return model;
        }
        /**
        * 删除
        * @return
        */
        @Override
        public ${entity}  delete(${entity} model){
            boolean back=this.deleteById(model.getId());
            return model;
        }
        /**
        * 修改方法
        * @return
        */
        @Override
        public ${entity}  update(${entity} model){
            boolean back=this.updateById(model);
            return model;
        }
        /**
        * 单个查询
        * @return
        */
        @Override
        public List<${entity}> query(${entity} model){
            Condition condition =  Condition.create();
            List<${entity}> logs = baseMapper.selectList(condition);

            return logs;
        }

        /**
        * 条件查询分页列表
        * @param pageParam
        * @return
        */
        @Override
        public Page page(${entity} pageParam){
            EntityWrapper condition =  new EntityWrapper();
            Page page = new Page<${entity}>(0, 20);
            List<${entity}> tbStrings = baseMapper.selectPage(page,condition);
            page.setRecords(tbStrings);
            return page;
        }

}
#end
